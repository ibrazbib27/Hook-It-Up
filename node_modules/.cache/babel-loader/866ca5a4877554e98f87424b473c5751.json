{"ast":null,"code":"var _jsxFileName = \"/Applications/Brackets.app/Contents/samples/root/Getting Started/DBZ-Hooks/src/components/CharacterDetails.jsx\";\n\n/*import React, { useState, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport 'isomorphic-fetch';\nimport 'es6-promise';\n\n\nconst Characters = () => {\n\nconst [charcters, setCharacters] = useState([]);\nconst getCharacters = async () =>{\n    let res = await fetch(\"https://last-airbender-api.herokuapp.com/api/v1/characters\");\n    let json = await res.json();\n    setCharacters(json);\n}\n useEffect(() => {\n     getCharacters();\n }, []);  \n    return (\n      <React.Fragment>\n{charcters.map(character => (\n/*<Row id={character.id} key={character.id} className=\"text-left p-3\">\n/*<Col  xs={12} md={4}>  <Image\n                      className=\" bg-white\"\n                      src={character.photoUrl}\n                      height={\"200\"}\n                      width={\"200\"}\n                      rounded\n                    /></Col>\n    <Col xs={12} md={8}>  \n        <ul  style={{listStyleType: \"none\"}}>\n            <li><b>Name:</b> {character.name}</li>\n            <li><b>Affiliation:</b> {character.affiliation}</li>\n            <li><b>Gender:</b> {character.gender}</li>\n            <li><b>Hair:</b> {character.hair}</li>\n            <li><b>Position:</b> {character.position}</li>\n            <li><b>Debut:</b> {character.first}</li>\n             <li><b>Allies:</b> {character.allies.map(allies => (<li>allies</li>))}</li>\n            <li><b>Enemies:</b> {character.enemies.map(enemies => (<li>enemies</li>))}</li>\n        </ul>\n                    </Col>\n))}\n      </React.Fragment>\n    );\n  }\n\nexport default Characters;\n*/\nimport React, { useState, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport 'isomorphic-fetch';\nimport 'es6-promise';\n\nconst CharacterDetails = ({\n  match\n}) => {\n  let eachEnemy = enemArr => {\n    let enemy = \"\";\n\n    for (let i = 0; i < enemArr.length; i++) {\n      if (i < enemArr.length - 1) enemy += enemArr[i] + \", \";else enemy += enemArr[i];\n    }\n\n    return enemy;\n  };\n\n  const [charcters, setCharacters] = useState([]);\n\n  const getCharacters = async () => {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    console.log(`${params}`);\n    let res = await fetch(`https://last-airbender-api.herokuapp.com/api/v1/characters/${params}`);\n    let json = await res.json();\n    setCharacters(json);\n  };\n\n  useEffect(() => {\n    getCharacters();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, charcters.map(character => /*#__PURE__*/React.createElement(Row, {\n    id: character._id,\n    key: character._id,\n    className: \"text-left p-3 mx-2 border-secondary border mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 1\n    }\n  }, \"  \", /*#__PURE__*/React.createElement(Image, {\n    className: \" bg-white\",\n    src: character.photoUrl,\n    height: \"200\",\n    width: \"200\",\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyleType: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Name:\"), \" \", character.name), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 18\n    }\n  }, \"Id:\"), \" \", character._id), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Affiliation:\"), \" \", character.affiliation), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Gender:\"), \" \", character.gender), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Hair:\"), \" \", character.hair), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Position:\"), \" \", character.position), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Debut:\"), \" \", character.first), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 18\n    }\n  }, \"Allies:\"), \" \", character.allies[0].includes(\" \") ? character.allies[0].replace(/ /g, \", \") : character.allies[0]), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Enemies:\"), \" \", character.enemies.length > 0 ? eachEnemy(character.enemies) : \"N/A\"))))));\n};\n\nexport default CharacterDetails;","map":{"version":3,"sources":["/Applications/Brackets.app/Contents/samples/root/Getting Started/DBZ-Hooks/src/components/CharacterDetails.jsx"],"names":["React","useState","useEffect","Col","Row","Image","CharacterDetails","match","eachEnemy","enemArr","enemy","i","length","charcters","setCharacters","getCharacters","params","props","console","log","res","fetch","json","map","character","_id","photoUrl","listStyleType","name","affiliation","gender","hair","position","first","allies","includes","replace","enemies"],"mappings":"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","sourcesContent":["/*import React, { useState, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport 'isomorphic-fetch';\nimport 'es6-promise';\n\n\nconst Characters = () => {\n\nconst [charcters, setCharacters] = useState([]);\nconst getCharacters = async () =>{\n    let res = await fetch(\"https://last-airbender-api.herokuapp.com/api/v1/characters\");\n    let json = await res.json();\n    setCharacters(json);\n}\n useEffect(() => {\n     getCharacters();\n }, []);  \n    return (\n      <React.Fragment>\n{charcters.map(character => (\n/*<Row id={character.id} key={character.id} className=\"text-left p-3\">\n/*<Col  xs={12} md={4}>  <Image\n                      className=\" bg-white\"\n                      src={character.photoUrl}\n                      height={\"200\"}\n                      width={\"200\"}\n                      rounded\n                    /></Col>\n    <Col xs={12} md={8}>  \n        <ul  style={{listStyleType: \"none\"}}>\n            <li><b>Name:</b> {character.name}</li>\n            <li><b>Affiliation:</b> {character.affiliation}</li>\n            <li><b>Gender:</b> {character.gender}</li>\n            <li><b>Hair:</b> {character.hair}</li>\n            <li><b>Position:</b> {character.position}</li>\n            <li><b>Debut:</b> {character.first}</li>\n             <li><b>Allies:</b> {character.allies.map(allies => (<li>allies</li>))}</li>\n            <li><b>Enemies:</b> {character.enemies.map(enemies => (<li>enemies</li>))}</li>\n        </ul>\n                    </Col>\n))}\n      </React.Fragment>\n    );\n  }\n\nexport default Characters;\n*/\nimport React, { useState, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport 'isomorphic-fetch';\nimport 'es6-promise';\n\n\nconst CharacterDetails = ({ match }) => {\nlet eachEnemy = (enemArr) => {\n    let enemy = \"\"\n    for(let i = 0; i < enemArr.length; i++){\n        if(i < (enemArr.length-1))\n            enemy += enemArr[i] + \", \";\n        else\n            enemy += enemArr[i];\n    }\n    return enemy;\n}\nconst [charcters, setCharacters] = useState([]);\nconst getCharacters = async () =>{\n     const {\n      match: { params },\n    } = this.props;\n    console.log(`${params}`)\n    let res = await fetch(`https://last-airbender-api.herokuapp.com/api/v1/characters/${params}`);\n    let json = await res.json();\n    setCharacters(json);\n}\n useEffect(() => {\n     getCharacters();\n }, []);  \n    return (\n      <React.Fragment>\n{charcters.map(character => (\n<Row id={character._id} key={character._id} className=\"text-left p-3 mx-2 border-secondary border mb-5\">\n<Col  xs={12} md={4}>  <Image\n                      className=\" bg-white\"\n                      src={character.photoUrl}\n                      height={\"200\"}\n                      width={\"200\"}\n                      rounded\n                    /></Col>\n    <Col xs={12} md={8}>  \n        <ul  style={{listStyleType: \"none\"}}>\n            <li><b>Name:</b> {character.name}</li>\n             <li><b>Id:</b> {character._id}</li>\n            <li><b>Affiliation:</b> {character.affiliation}</li>\n            <li><b>Gender:</b> {character.gender}</li>\n            <li><b>Hair:</b> {character.hair}</li>\n            <li><b>Position:</b> {character.position}</li>\n            <li><b>Debut:</b> {character.first}</li>\n             <li><b>Allies:</b> {character.allies[0].includes(\" \") ? character.allies[0].replace(/ /g, \", \") : character.allies[0]}</li>\n            <li><b>Enemies:</b> {character.enemies.length > 0 ? eachEnemy(character.enemies) : \"N/A\"}</li>\n        </ul>\n                    </Col>\n</Row>))}\n      </React.Fragment>\n    );\n  }\n\nexport default CharacterDetails;"]},"metadata":{},"sourceType":"module"}